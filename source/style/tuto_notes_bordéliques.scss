@import "colors";
// parshaule ?????

$font :"Ubuntu", arial, sans-serif;
$font-secondary : "Impact", serif;
$primary-color:red;
$size:15px;

// @if $p == 15px
// {

// }
// @else
// {
    
// }

@for $i from 1 through 5
{
    h#i
    {
        font-family:$font-secondary;
        font-size: 5 * $size / $i;
    }
}

$list:$slide1, $slide2, $slide3;
@each $i in list 
{
    .#{$i}{
        width:100px;
        height:100px;
        background:url("../img/$i.jpg");
    }    
}
$value:160;
@while$value > 100
{
    width-#{$value}
    {
        margin-top:10px;
        width:#{$value}px;
    }
    $value : $value - 20;
    // Pour sortir de la boucle
}

@function add1000($value)
{
    @return $value + 1000;
}



.box
{
    width:add1000(100px);
}
body
{
    font:$font;
}

h1 
{
    font-size: 2 * $size;
}

header 
{
    ul
    {
        li 
        {
            background-color: darken(rgb(46, 31, 31),40%);
            a 
            {
                color:$primary-color;
            }
        }
    }
}

@mixin box($padding, $margin, $bg-color : #dedede, $text-color:red)
{
    
    padding:$padding;
    margin:$margin;
    background:$bg-color;
    color:$text-color;
}

.custom-stuff
{
    @include box(20px, 10px, black);
}

%button
{
    padding: 15px;
    //pas de parametres passables, mais mets le code en commun dans une seule classe > rendu css plus propre
}

// Mixin si bcp de parametres changent par rapport Ã  la classe par defaut
// Placeholder si tres peu changent > mets en commun ce qu'il y a en commun dans les classes
.button-orange
{
    @extend %button
}